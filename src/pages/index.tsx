import Head from "next/head";
import { Banner, Navbar, TagInfoGroups, SeasonalProjectGroups, NewsGroup, ProgramGroups, ServiceGroups, Consultation, AdvisoryGroups, ApprovalCases, Footer } from "../components";
import { ModalContext, ModalPortal, Toaster } from "../components/Toolkits";
import { useState } from "react";
import axios from "axios";
import { formatNewsTitle } from "../utils/helper";
import { GetStaticProps, InferGetStaticPropsType } from "next";

export const getStaticProps: GetStaticProps = async (context) => {
	try {
		const accessToken = process.env["FB_PAGE_ACCESS_TOKEN"];
		const FB_URL = `https://graph.facebook.com/v16.0/100184219613847/feed?fields=attachments%2Cmessage&access_token=${accessToken}`;
		const response = (
			await axios.get(FB_URL, {
				headers: {
					"Accept-Encoding": "gzip",
				},
			})
		).data;
		const news = response.data
			.filter((data: any) => data.message && data.attachments)
			.map((data: any) => {
				return {
          id: data.id,
					title: formatNewsTitle(data.message),
					imgUrl: data.attachments?.data[0]?.media?.image?.src,
				};
			});
		return {
			props: { news },
		};
	} catch (err) {
		console.log("__getStaticProps error: ", err);
		return {
			props: { news: [] },
		};
	}
};

export default function Home({ news }: InferGetStaticPropsType<typeof getStaticProps>) {
	const [isOpenModal, setIsOpenModal] = useState<boolean>(false);
	const [modalComponent, setModalComponent] = useState<JSX.Element | null>(null);

	return (
		<>
			<div className="w-full">
				<Head>
					<title>CANIMMVN</title>
					<meta
						name="description"
						content="Generated by create next app"
					/>
					<link
						rel="icon"
						href="/favicon.ico"
					/>
				</Head>
				<Navbar />
				<Banner />
				<TagInfoGroups />
				<SeasonalProjectGroups />
				<NewsGroup news={news} />
				<ProgramGroups />
				<ModalContext.Provider value={{ isOpenModal, handleOpenModal: setIsOpenModal, setModalComponent }}>
					<ServiceGroups />
				</ModalContext.Provider>
				<AdvisoryGroups />
				<ApprovalCases />
				<Consultation />
				<Footer />
				<div
					id="tool-kit"
					className="hidden text-white stroke-white stroke-strongPink mr-2"></div>
			</div>
			{isOpenModal ? <ModalPortal handleOpenModal={setIsOpenModal}>{modalComponent}</ModalPortal> : <></>}
		</>
	);
}
